/* 
  Base fade element: 
  - Hidden by default via opacity:0
  - No layout shift because transform: translate/opacity doesn't reflow.
*/
.fade-element {
  opacity: 0;
  transform: translateY(0);
  transition: opacity 1s ease-in-out, transform 1s ease-in-out;
}

/* 
  "fade-in" class: 
  - Applies the final state for the base fade element. 
  - In some cases, you might just use .fade-element.fade-in { opacity:1; } 
    for a simple fade. 
*/
.fade-element.fade-in {
  opacity: 1;
  transform: translateY(0);
}

/* 
  Simple Fade (Keyframes):
  - from 0% -> 100% with opacity changes only.
  - Use the .fade and .fade-in together if you want keyframe control instead of the basic transition.
*/
@keyframes fade {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.fade.fade-in {
  animation: fade 1s ease-in-out forwards;
}

/* 
  Fade Up 
  - Animates from transform: translateY(20px) to 0, plus opacity from 0 to 1.
*/
@keyframes fade-up {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.fade-up.fade-in {
  animation: fade-up 1s ease-in-out forwards;
}

/* 
  Fade Down 
  - Animates from transform: translateY(-20px) to 0, plus opacity 0 to 1.
*/
@keyframes fade-down {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.fade-down.fade-in {
  animation: fade-down 1s ease-in-out forwards;
}

/* 
  Fade Left
  - Animates from transform: translateX(-50px) to 0, plus opacity 0 to 1.
*/
@keyframes fade-left {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
.fade-left.fade-in {
  animation: fade-left 1s ease-in-out forwards;
}

/* 
  Fade Right
  - Animates from transform: translateX(50px) to 0, plus opacity 0 to 1.
*/
@keyframes fade-right {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
.fade-right.fade-in {
  animation: fade-right 1s ease-in-out forwards;
}


/* ------------------------------------- */
/*        CSSTransition for Menu          */
/* ------------------------------------- */

/* Entering */
.menu-enter {
  opacity: 0;
  transform: translateY(-20px);
}

.menu-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
}

/* Exiting */
.menu-exit {
  opacity: 1;
  transform: translateY(0);
}

.menu-exit-active {
  opacity: 0;
  transform: translateY(-20px);
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
}

/* ------------------------------------- */
/*        Hover animations               */
/* ------------------------------------- */

.btn:hover .plus { 
  animation: twist 0.25s ease-in-out forwards;
}

@keyframes twist { 
  from { 
      transform: rotate(0deg);
  }
  to { 
      transform: rotate(90deg);
  }
}


.turnParent .turn { 
  transform: rotate(45deg);
}

.turnParent:hover .turn { 
  transform: rotate(0deg);
}

/* ------------------------------------- */
/*        Constant animations            */
/* ------------------------------------- */

/* Container to hold the sliding text */
.sliding-text-wrapper {
  width: 100vw; /* Full width of the viewport */
  overflow: hidden; /* Hide the overflow */
  white-space: nowrap; /* Ensure text stays in one line */
  position: relative;
}

/* Styling for the sliding text */
.sliding-text {
  display: inline-block;
  white-space: nowrap; /* Prevent text wrapping */
  font-weight: 600;
  animation: slide 60s linear infinite; /* Continuous sliding animation */
}

/* Keyframes for seamless sliding */
@keyframes slide {
  0% {
    transform: translateX(0); /* Start at normal position */
  }
  100% {
    transform: translateX(-50%); /* Move left by half its width */
  }
}

/* Ensure text size is responsive */
@media (max-width: 768px) {
  .sliding-text {
    font-size: 6vw;
  }
}

@media (max-width: 480px) {
  .sliding-text {
    font-size: 8vw;
  }
}

.glow { 
  animation: radiate 1.5s ease-in-out infinite;
}

@keyframes radiate {
  0%, 100% { 
    opacity: 0.25;
  }
  50% { 
    opacity: 1;
  }
  75% { 
    opacity: 0.5;
  }
}

.rotate {
  animation: flipHourglass 4s infinite linear;
}

@keyframes flipHourglass {
  /* First half of the cycle: hold at 0째 */
  0%, 49.999% {
    transform: rotate(0deg);
  }

  /* Instantly flip to 180째 at 50% */
  50%, 99.999% {
    transform: rotate(180deg);
  }

  /* Instantly flip back to 0째 at the very end, 
     so the next cycle starts again at 0째 */
  100% {
    transform: rotate(0deg);
  }
}



